
/*一个数组有m+n个元素，其中1~m个元素升序，m+1~n元素降序，数组从1~m+n开始，设计算法将其全部变为升序/降序*/
/*P313 题目02 [习题]*/

/**********************************************************************************************************/
/*王道：相当于原先数组做过m次插入排序，值需要对后面的数组再做n次插入排序即可               */
/*      时间复杂度O(nm)，元素移动次数O(mn)，元素比较次数O(nm)，空间复杂度O(1)            */

void Sort(int a[], int m, int n) {
	int i, j;
	for (i = m + 1; i <= n + m; i++) {
		a[0] = a[i];
		for (j = i - 1; j > 0 && a[j] > a[0]; j--) {  //此处不考虑，直接将后面的后移，知道遇到正确位置放入
			a[j + 1] = a[j];
		}
		a[j] = a[0];
	}
}

/**********************************************************************************************************/

/*时间换空间：由于数组特性是 [小-大-大-小]故只需要设置头尾下标进行扫描即可，插入到一个新的数组中       */
/*时间复杂度O(n+m)，空间复杂度O(m+n)，元素对比次数O(m+n)                                          */

void Sort(int *a,int *b, int m, int n) {
	int front = 1, tail = n + m, cnt = 1;
	while (front < tail) {
		if (a[front] < a[tail]) b[cnt++] = a[tail--];
		else b[cnt++] = a[front++];
	}
}
